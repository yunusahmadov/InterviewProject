const ruQuest={
    "quest1": "Что такое HTML",
    "answer1": "HTML (от англ. HyperText Markup Language) — стандартный язык разметки веб-страниц. Он позволяет создавать и структурировать разделы, абзацы и ссылки с помощью элементов HTML (строительных блоков веб-страниц), таких как теги и атрибуты.",
    "quest2": "Какие основные теги HTML вы знаете?",
    "answer2": "div, header, main, section и footer - это основные теги HTML5 для создания семантической структуры веб-страницы. Также можно упомянуть теги, такие как p, h1-h6, ul, ol, li, a, img и т.д., которые используются для создания содержимого веб-страницы.",
    "cssq1": "Что такое селектор CSS?",
    "cssq1answer":"Селектор CSS (Cascading Style Sheets) - это часть CSS-правила, которая определяет, какие элементы HTML на странице будут стилизованы этим правилом. Селекторы выбирают элементы на основе их имени тега, атрибутов, классов или идентификаторов.",
    "jsq1":"Какие типы данных есть в JavaScript?",
    "jsq1answer":"Примитивные типы данных:\n\nЧисла (numbers): представляют как целые, так и дробные числа;\nСтроки (strings): представляют текстовые данные;\nБулевы значения (booleans): представляют истину (true) или ложь (false);\nNull: представляет отсутствие значения;\nUndefined: представляет отсутствие определения значения;\nSymbol (введен в ECMAScript 6): представляет уникальный и неизменяемый идентификатор.\n\nОбъекты:\nОбъекты (objects): хранят данные в формате ключ-значение;\nМассивы (arrays): это объекты, которые хранят упорядоченные коллекции значений;\nФункции (functions): используются для выполнения конкретных задач;\nДаты (dates): представляют даты и времена;\nРегулярные выражения (regular expressions): используются для работы с текстом, выполняют поиск и замену.",
    "jsq2":"Получить четные числа из массива",
    "jsq3":"Преобразовать массив строк в массив чисел",
    "jsq3desc":" Вариант с помощью map",
    "jsq3desc2":" Вариант с помощью цикла 'for' ",
    "jsq4":"Преобразовать  массив чисел в массив строк",
    "jsq4desc":" Вариант с помощью toString()",
    "jsq4desc2":" Вариант с помощью оператора '+' ",
    "jsq5":"Что такое каррирование?",
    "jsq5answer":"Каррирование в JavaScript - это процесс преобразования функции с несколькими аргументами в последовательность функций, каждая из которых принимает только один аргумент. Каждая функция возвращает новую функцию, которая ожидает следующий аргумент, пока не будут переданы все необходимые аргументы. Когда функция каррируется, она становится более гибкой и может быть использована для создания новых функций с фиксированными аргументами. Это полезно, когда нужно создать функцию, которая будет использоваться многократно с некоторыми фиксированными значениями.",
    "jsq6":"Что такое замыкание?",
    "jsq6answer":"Замыкание в JavaScript - это комбинация функции и лексического окружения, в котором эта функция была объявлена. Замыкание позволяет функции сохранять доступ к переменным из своего внешнего лексического окружения, даже после завершения выполнения этого окружения. Это означает, что функция может запомнить и использовать переменные из окружения, в котором она была создана, даже когда она вызывается в другом месте или времени.",
    "jsq6desc":"В этом примере функция innerFunction является замыканием, потому что она сохраняет доступ к переменной outerVariable из своего внешнего окружения outerFunction. После вызова outerFunction мы сохраняем возвращаемую innerFunction в переменной myFunction и затем вызываем myFunction(), что выводит 'Hello'. innerFunction все еще имеет доступ к outerVariable, несмотря на то, что outerFunction уже завершила свое выполнение.",
    "jsq6desc2":" Замыкание и приватные переменные\nВ этом примере функция counter возвращает объект с двумя методами increment и decrement. Оба метода имеют доступ к переменной count, объявленной внутри функции counter, благодаря замыканию. Таким образом, переменная count является приватной и не доступна напрямую извне. Мы можем вызывать методы объекта myCounter, чтобы инкрементировать и декрементировать значение count и выводить его на каждом шаге. ",
    


  }
  export default ruQuest